divert(-1)
This file is an input to m4, a macro processor. The output is a file containing
a single-line RE that can be compiled and used as an obscenity filter. The
remaining part of this section is dedicated to defining the macros used to
generate the expression. On a device with m4 installed, simply run:

	$ m4 vulgar_re.m4 > vulgar.re

...to regenerate the file.

This file was tested against GNU m4, a very featureful and flexible m4;
however, the intended target is any POSIX-compliant m4. Please let the
maintainers of this repository know if you find a bug in another (conforming)
m4 implementation.

Joins all non-empty arguments from the second on using the first as a separator
between.
define(`join', `ifelse(`$#', `2', ``$2'', `ifelse(`$2', `', `', ``$2'_')$0($1, shift(shift($@)))')')
define(`_join', `ifelse(`$#$2', `2', `', `ifelse(`$2', `', `', ``$1$2'')$0($1, shift(shift($@)))')')

Apply the unadic macro named by the first argument to each argument, providing
a comma-separated list suitable for consumption by another reducing macro (like
join).
define(`map', `ifelse(eval(`$# < 2'), `1', `', `ifelse(`$#$2', `2', `', `ifelse(`$2', `', `', `$1(`$2')'),$0(`$1', shift(shift($@)))')')')

RE-generating macros
define(`seq', ``'(?:join(`', $@))')
define(`alt', ``'(?:join(`|', $@))')
define(`rep', ``'(?:(?:$1){$2,$3})')
define(`opt', `rep(`$1', `', `1')')
define(`zmore', `rep(`$1', `', `')')
define(`omore', `rep(`$1', `1', `')') 
define(`ucs', `\U`'eval(`0x'$1, `16', `8')')
define(`capt', ``'($1)')

Higher level RE macros
define(`word_sep', `zmore(`\W')')
define(`seq_sep', ``'(?:join(word_sep, $@))')
define(`rep_sep', ``'(?:(?:$1`'word_sep){$2,$3})')
define(`zmore_sep', `rep_sep(`$1', `', `')')
define(`omore_sep', `rep_sep(`$1', `1', `')')
define(`ws_begin', `alt(`^', `\s+')')
define(`ws_end', `alt(`$', `\s+')')

Phonetic classes
define(`ph_f', `alt(omore_sep(`f'), seq_sep(`p', omore_sep(`h')))')
define(`ph_k', `omore_sep(alt(`c', `k'))')
define(`ph_x', `alt(omore_sep(`x'), seq_sep(opt(ph_k), `s'))')
define(`ph_ch', `alt(seq_sep(opt(`t'), omore_sep(`c'), omore_sep(`h')), rep_sep(`c', `2', `'))')
The following two include relevant emoji:
define(`ph_b', `alt(`b', ucs(`1F171'))')
define(`ph_p', `alt(`p', ucs(`1F17F'))')
define(`ph_ss', `rep_sep(alt(`s', `z'), `2', `')')
Numeric substitutions:
define(`ns_o', `alt(`o', `0')')
define(`ns_e', `alt(`e', `3')')
define(`ns_l', `alt(`l', `1')')
define(`ns_i', `alt(`i', `1')')
define(`ns_a', `alt(`a', `4')')

Below the following diversion, please be careful to ensure that this file
generates only a single line. By necessity, there will be obscenity in here.
divert`'dnl
!!! THIS FILE IS AUTOMATICALLY GENERATED !!! Modify vulgar_re.m4 and regenerate. See that file for more details.
(?i)alt(map(`capt',
	ifelse(`Fuck and analogues:'),
	seq(seq_sep(ph_f, alt(omore_sep(`u'), ns_o, omore_sep(`a')), ph_k, opt(alt(seq_sep(zmore_sep(ns_e), omore_sep(`r')), seq_sep(alt(ns_i, ns_e), omore_sep(`n'), zmore_sep(`g'))))), ws_end),  dnl fuck[er|ing], fack, fuk etc.
	seq(seq_sep(ph_f, omore_sep(ns_a), omore_sep(`r'), alt(ph_k, omore_sep(`g'))), ws_end),  dnl farg, fark
	seq(seq_sep(ph_f, omore_sep(`r'), alt(omore_sep(ns_i), omore_sep(`a')), ph_k), ws_end),  dnl frick, frigg
	ifelse(`Body parts often used as pejoratives and related:'),
	seq(ws_begin, seq_sep(omore_sep(ns_a), ph_ss, opt(alt(seq_sep(`h', ns_o, ns_l, opt(ns_e)), seq_sep(`h', omore_sep(ns_a), omore_sep(`t')), seq_sep(`w', omore_sep(ns_i), `p', omore_sep(ns_e)), seq_sep(`m', alt(`o', `u'), `n', ph_k, opt(`e'), `y'), seq_sep(ph_f, ns_a, alt(seq_sep(`c', ns_e), seq_sep(ns_i, `c')))))), ws_end),  dnl ass[hole|hat|wipe|monkey|face]
	seq(ws_begin, seq_sep(omore_sep(ns_a), `r', omore_sep(`s'), ns_e), ws_end),  dnl arse
	seq(ws_begin, seq_sep(ns_a, `n', omore_sep(`u'), omore_sep(`s')), ws_end),  dnl anus
	seq_sep(alt(`p', `b'), ns_e, alt(`n', `p'), omore_sep(ns_i), omore_sep(alt(`s', `z'))),  dnl penis, bepis
	seq_sep(`v', ns_a, omore_sep(`g'), omore_sep(ns_i), `n', ns_a),  dnl vagina
	seq(seq_sep(ph_k, omore_sep(`u'), omore_sep(`n'), omore_sep(`t')), ws_end),  dnl cunt
	seq(ws_begin, seq_sep(ph_k, ns_o, ph_k, opt(alt(seq_sep(`h', ns_e, opt(ns_a), `d'), seq_sep(`s', omore_sep(`u'), ph_k, opt(seq_sep(omore_sep(ns_e), omore_sep(`r'))))))), ws_end),  dnl cock[head|sucker]
	ifelse(`Racially-charged words:'),
	seq_sep(`n', ns_i, rep_sep(alt(`g', ph_b), `2', `'), opt(alt(`a', seq_sep(zmore_sep(alt(`e', `u')), omore_sep(`r'))))),  dnl nigg[er|a], nibba etc.
	seq(ws_begin, seq_sep(`j', ns_a, `p', opt(`s')), ws_end),  dnl jap
	ifelse(`Sexually-charged words:'),
	seq_sep(ph_b, omore_sep(alt(ns_i, ns_e)), zmore_sep(`y'), zmore_sep(alt(ns_a, ns_o)), ph_ch),  dnl bitch, beyotch, biatch etc.
	seq_sep(ph_f, ns_a, omore_sep(`g'), opt(alt(ns_i, ns_o), omore_sep(`t'))),  dnl fag, fagg[ot|it] etc.
	seq_sep(`w', `h', omore_sep(ns_o), `r', zmore_sep(ns_e)),  dnl whore
`'))
